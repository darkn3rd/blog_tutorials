repositories:
  # https://artifacthub.io/packages/helm/dgraph/dgraph/0.0.19
  - name: dgraph
    url: https://charts.dgraph.io
  # https://artifacthub.io/packages/helm/itscontained/raw
  - name: itscontained
    url: https://charts.itscontained.io

releases:
  - name: dgraph
    namespace: dgraph
    chart: dgraph/dgraph
    version: 0.0.19
    values:
      - image:
          tag: v21.03.2
        alpha:
          configFile:
            config.yaml: |
              security:
                whitelist: {{ env "DG_ACCEPT_LIST" | default "0.0.0.0/0" | quote }}
          service:
            type: ClusterIP

        {{- if ne (env "NGINX_CRD") "true" }}
        global:
          ingress:
            enabled: true
            ingressClassName: null
            annotations:
              cert-manager.io/cluster-issuer: {{ requiredEnv "ACME_ISSUER_NAME" }}
              kubernetes.io/ingress.class: nginx
            tls:
              - hosts:
                  - dgraph.{{ requiredEnv "DNS_DOMAIN" }}
                secretName: dgraph-tls-secret
            alpha_hostname: dgraph.{{ requiredEnv "DNS_DOMAIN" }}

          ingress_grpc:
            enabled: true
            ingressClassName: null
            annotations:
              cert-manager.io/cluster-issuer: {{ requiredEnv "ACME_ISSUER_NAME" }}
              # Name of Service is '${RELEASE}-dgraph-alpha'
              nginx.org/grpc-services: "dgraph-dgraph-alpha"
              kubernetes.io/ingress.class: nginx
            tls:
              - hosts:
                  - grpc.{{ requiredEnv "DNS_DOMAIN" }}
                secretName: grpc-tls-secret
            alpha_grpc_hostname: grpc.{{ requiredEnv "DNS_DOMAIN" }}
        {{- end }}

  {{- if eq (env "NGINX_CRD") "true" }}
  - name: dgraph-virtualservers
    chart: itscontained/raw
    namespace: dgraph
    version:  0.2.5
    disableValidation: true
    values:
      - resources:
          - apiVersion: k8s.nginx.org/v1
            kind: VirtualServer
            metadata:
              name: dgraph-http
            spec:
              host: dgraph.{{ requiredEnv "DNS_DOMAIN" }}
              tls:
                secret: dgraph-tls-secret
                cert-manager:
                  cluster-issuer: {{ requiredEnv "ACME_ISSUER_NAME" }}
              externalDNS:
                enable: true
              upstreams:
                - name: dgraph
                  # Name of Service is '${RELEASE}-dgraph-alpha'
                  service: dgraph-dgraph-alpha
                  port: 8080
              routes:
                - path: /
                  action:
                    pass: dgraph

          - apiVersion: k8s.nginx.org/v1
            kind: VirtualServer
            metadata:
              name: dgraph-grpc
              namespace: dgraph
            spec:
              host: grpc.{{ requiredEnv "DNS_DOMAIN" }}
              tls:
                secret: grpc-tls-secret
                cert-manager:
                  cluster-issuer: {{ requiredEnv "ACME_ISSUER_NAME" }}
              externalDNS:
                enable: true
              upstreams:
                - name: grpc
                  # Name of Service is '${RELEASE}-dgraph-alpha'
                  service: dgraph-dgraph-alpha
                  port: 9080
                  type: grpc
              routes:
                - path: /
                  action:
                    pass: grpc
  {{- end }}
